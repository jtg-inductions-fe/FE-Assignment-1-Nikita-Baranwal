@use '../abstracts/functions' as *;
@use '../abstracts/variables' as variables;
@use '../abstracts/mixins' as *;

@include font-face(
    $name: 'Circular Std',
    $path: '/src/assets/fonts/circularStd/CircularStd-Bold'
);

@include font-face(
    $name: 'Inter',
    $path: '/src/assets/fonts/inter/Inter_18pt-Thin'
);

body {
    font-family: 'Circular Std';
    font-weight: variables.$weight-bold;
}

h1 {
    font-size: px-to-rem(40);
    line-height: 120%;

    @include breakpoint('lg') {
        font-size: px-to-rem(56);
    }

    @include breakpoint('xl') {
        font-size: px-to-rem(69);
    }
}

h2 {
    font-size: px-to-rem(32);
    color: map-get(variables.$colors, grey-black);

    @include breakpoint('lg') {
        font-size: px-to-rem(40);
    }

    @include breakpoint('xl') {
        font-size: px-to-rem(55);
    }
}

h3 {
    font-size: px-to-rem(32);
    color: map-get(variables.$colors, grey-black);

    @include breakpoint('lg') {
        font-size: px-to-rem(40);
    }

    @include breakpoint('xl') {
        font-size: px-to-rem(44);
    }
}

h6 {
    font-size: px-to-rem(23);
    color: map-get(variables.$colors, grey-black);
}

h5 {
    font-size: px-to-rem(28);
    color: color-opacity(map-get(variables.$colors, grey-black), 0.75);
}

.section-title {
    font-size: px-to-rem(16);
    color: map-get(variables.$colors, orange);

    @include breakpoint('lg') {
        font-size: px-to-rem(23);
    }
}

p {
    @include font('Inter', px-to-rem(16), 400);
    color: color-opacity(map-get(variables.$colors, grey-black), 0.5);
    line-height: 160%;

    @include breakpoint('lg') {
        font-size: px-to-rem(18);
        max-width: 40ch;
    }
}

.body2 {
    @include font('Circular Std', px-to-rem(18), 450);
    color: color-opacity(map-get(variables.$colors, grey-black), 0.75);

    @include breakpoint('lg') {
        font-size: px-to-rem(23);
    }
}

.hero-section__button {
    padding-top: 24px;
    padding-bottom: 24px;
}

ul li a {
    font-size: px-to-rem(14);
    color: color-opacity(map-get(variables.$colors, grey-black), 0.5);
}
